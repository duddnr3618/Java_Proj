package chapter10.ex05;

class A {
	//인스턴스필드 (스테틱이 붙어있지 않다)
	int m = 20; 
	
	//인스턴스 메소드
	void print () {
		System.out.println("A클래스의 print() : " );
	}
}

class B extends A {
	int m = 30;		//같은 변수는 오버라이딩 되지 않고 별개로 처리된다
	
	//인스턴스 메소드 오버라이딩된다.
	void print () {
		System.out.println("B클래스의 print () : ");
	}
}



public class Overriding_InstanceFeild {

	public static void main(String[] args) {
		//상속에서 주의 : 오버라이딩은 인스턴스 메소드만 오버라이딩된다.
		//상속은 부모클레스의 필드(인스턴스필드,정적필드),메소드(인스턴스메소드,정적메소드) , 이너클래스를 상속받는다.
		//생성자는 상속되지 않는다.
		//인스턴스필드,정적필드,정적메소드는 오버라이딩 되지 않는다.
		
		//필드와 메모리 저장 위치
		//-인스턴스 필드 : Heap공간에 저장이된다. 부모필드,자식필드 별개의 공간에 저장됨.->오버라이딩 되지 않는다
		//-정적필드 : 클래스 영역에 저장됨. 부모 , 자식은 별개의 공간에 저장됨 ->오버라이딩 되지 않는다
		//-인스턴스메소드 : 메모리에 인스턴스 메소드라는 영역에 저장됨. ->오버라이딩 됨
		//-정적메소드 : 클래스 영역에 저장됨 ->부모,자식은 별개의 공간에 저장됨 -> 오버라이딩 되지 않는다.
		
		//자식객체를 생성하면서 부모타입으로 지정
		A a1 = new B ();
			//m필드의 값을 출력
		System.out.println(a1.m);		//20 
		
		a1.print();		//오버라이딩 되어서 출력
		
		B b1 = (B) a1 ;
		System.out.println(b1.m);		//30 ->인스턴스 필드는 오버라이딩 되지 않는다.
		b1.print();
		
	}

}
